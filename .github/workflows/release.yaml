name: goreleaser

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  goreleaser:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.3"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Create venv
        run: python -m venv ms_extractor

      - name: Activate venv and install dependencies
        run: |
          source ms_extractor/bin/activate
          pip install -r requirements.txt

      - name: Build extractor binary
        run: |
          source ms_extractor/bin/activate
          pyinstaller --onefile --name=extractor_bin extractor/__main__.py
          rm -rf build/
          rm *.spec

      - name: Download CSV files
        run: go generate

      - name: Commit autogenerated binary and CSV files
        run: |
          set -e
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git add -f dist/extractor_bin
          git add -f csv/
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Generate python executable and download conversion files"
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Move tag to latest commit
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          LATEST_COMMIT=$(git rev-parse origin/main)
          echo "Moving tag $TAG_NAME to $LATEST_COMMIT"
          git tag -f "$TAG_NAME" "$LATEST_COMMIT"
          git push origin -f "$TAG_NAME"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
